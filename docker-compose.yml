version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_SERVER_ID=1

  kafka:
    image: confluentinc/cp-kafka:7.2.0
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_DOCKER://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_DOCKER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_DOCKER
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:7.2.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      kafka-topics --bootstrap-server kafka:29092 --list
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic weather --replication-factor 1 --partitions 1
      echo -e 'Created topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
  
  benthos:
    image: jeffail/benthos:4.4
    volumes:
      - ./benthos.yaml:/benthos.yaml
    depends_on:
      - kafka

  postgrest:
    image: postgrest/postgrest:v9.0.1
    ports:
      - "3000:3000"
    environment:
      - PGRST_DB_URI=postgres://postgres:postgres@postgres:5432/weather
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=postgres
    depends_on:
      - postgres
  
  postgres:
    image: postgres:14.4
    environment:
      - POSTGRES_DB=weather
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init-table.sh:/docker-entrypoint-initdb.d/init-table.sh
      - ./data:/var/lib/postgresql/data

  forecasts:
    image: forecasts:latest
    depends_on:
      - kafka
